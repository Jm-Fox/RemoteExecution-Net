Remote Execution project changelog
---------------------------------------------------

Version 1.1.0:
---------------------
+ renamed namespaces
+ introduced IRequest
+ introduced IIncomingMessageChannel and IOutgoingMessageChannel

Version 1.0.6:
----------------
+ refactored RemoteCallInterceptor
+ added IRemoteExecutor.Create() overload with NoResultMethodExecution allowing to waiting (TwoWay) or no waiting (OneWay) for response if method returns void
+ introduced BroadcastRemoteExecutor allowing to broadcast OneWay operations to all clients (can be used only on server side)
+ extended IServerEndpoint to return BroadcastChannel
+ refactored code and adjusted names
+ added example projects

Version 1.0.5:
----------------
+ added load tests and stabilized framework
+ exposed ClientEndpoint Connection property
+ added ctor with default OperationDispatcher to ClientEndpoint
+ removed INetworkEndpoint and hidden MessageLoop class
+ increased MessageLoop performance

Version 1.0.4:
----------------
+ NotConnectedException is now thrown if message is sent using closed connection.
+ OperationAbortedException is now thrown if connection has been closed before response is received.
+ IOperationDispatcher method names have been changed to distinguish handlers for requests and responses
+ DispatchAbortResponses method has been added to IOperationDispatcher, allowing to abort all pending operations for given channel
+ added IConfigurableNetworkConnection with settable OperationDispatcher
+ renamed IMessageSender to IMessageChannel

Version 1.0.3:
----------------
+ used MessageLoop internally in LindgrenEndpoint (so it is not needed to use it directly in code)
+ fixed issue with serialization problem of thrown exceptions (Now, only the exception type and message is preserved - call stack is not).

Version 1.0.2:
----------------
+ modified RemoteExecutor class to be a non-static class and extracted IRemoteExecutor interface
+ changed Networking.Client to Endpoints.ClientEndpoint
+ changed Networking.Server to Endpoints.ServerEndpoint
+ introduced Endpoints.Processing.MessageLoop
+ moved OperationDispatcher from ServerEndpoint to each INetworkConnection, so each connection can have own set of operations

Version 1.0.1:
----------------
+ updated version of ObjectSerialization package
+ extended MessageSerializer with RegsterSerializableFrom() that allows to register types with [Serializable] attribute in order to decrease their serialized length

Version 1.0.0:
----------------
+ project setup
+ extracted remote execution code from http://sourceforge.net/projects/distantcolony/
+ added NuGet package